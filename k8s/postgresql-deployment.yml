apiVersion: v1
kind: Service
metadata:
  name: nodejs-postgres-db
  labels:
    app: nodejs-postgres-db
spec:
  type: ClusterIP
  ports:
    - targetPort: 5432
      port: 5432
  selector:
    app: nodejs-postgres-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nodejs-postgres-db-pv
  labels:
    app: nodejs-postgres-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-postgres-db
  labels:
    app: nodejs-postgres-db
spec:
  selector:
    matchLabels:
      app: nodejs-postgres-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nodejs-postgres-db
    spec:
      serviceAccountName: nodejs-server-sa
      containers:
        - image: postgres:14
          name: nodejs-postgres-db
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: nodejs-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nodejs-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: nodejs-secrets
                  key: POSTGRES_DB
          resources:
            limits:
              cpu: "1000m"
              memory: "1.5Gi"
            requests:
              cpu: "1000m"
              memory: "1.5Gi"
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: nodejs-postgres-volume
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: nodejs-postgres-volume
          persistentVolumeClaim:
            claimName: nodejs-postgres-db-pv
